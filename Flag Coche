library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity FlagCoche is
      Port (
            clk, rst: IN STD_LOGIC;
            BotonIzq, BotonDer: IN STD_LOGIC;
            Estado: IN STD_LOGIC_VECTOR(2 downto 0);
            FlagC: OUT STD_LOGIC_VECTOR (2 DOWNTO 0)
       );
end FlagCoche;

architecture Behavioral of FlagCoche is

SIGNAL FlagC_aux: UNSIGNED (2 DOWNTO 0) := "001";

begin

PROCESS (Clk,Estado)
BEGIN
    IF (rst = '0') THEN --Importante resetear aqui el Flag del coche para que no de conflictos cuando acabemos el nivel y volvamos a jugar
        FlagC_aux <= "001";
    ELSIF(clk'event AND clk = '1') THEN
        IF (Estado = "001") THEN -- Para el LVL 1
            IF (BotonIzq = '1' AND BotonDer = '0') THEN
                FlagC_aux <= FlagC_aux + 1;
            ELSIF (BotonIzq = '0' AND BotonDer = '1') THEN
                FlagC_aux <= FlagC_aux - 1;
            END IF;
        END IF;
        IF (Estado = "010") THEN -- Para el LVL 2
            IF (BotonIzq = '1' AND BotonDer = '0') THEN
                FlagC_aux <= FlagC_aux + 1;
            ELSIF (BotonIzq = '0' AND BotonDer = '1') THEN
                FlagC_aux <= FlagC_aux - 1;
            END IF;
        END IF;
    END IF;
END PROCESS;

FlagC <= std_logic_vector(FlagC_aux);

end Behavioral;

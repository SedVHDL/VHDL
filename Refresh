library IEEE;
use IEEE.STD_LOGIC_1164.ALL;


entity refresh is
    Port (
        clk: IN STD_LOGIC;
        rst: IN STD_LOGIC;
        flagC: IN STD_LOGIC_VECTOR(2 DOWNTO 0); -- Flag indicador de posicion del coche.
        flagIpos: IN STD_LOGIC_VECTOR(2 DOWNTO 0); -- Flag indicador de display (Limite izquierdo).
        flagDpos: IN STD_LOGIC_VECTOR(2 DOWNTO 0); -- Flag indicador de display (Limite derecho).
        flagIlado: IN STD_LOGIC; -- Flag infdicador de lado dentro de un display (Para el lado izquierdo).
        flagDlado: IN STD_LOGIC; -- Flag infdicador de lado dentro de un display (Para el lado derecho).
        SelectorIN: IN STD_LOGIC_VECTOR(2 DOWNTO 0);  -- El selector que entra al controlador en formato de 3 bits.
        SelectorOUT: OUT STD_LOGIC_VECTOR(7 DOWNTO 0); --Señal de selector para Constraits.
        Segmentos: OUT STD_LOGIC_VECTOR(7 DOWNTO 0) --Señal de segmentos para Constraits.
         );
end refresh;

architecture Behavioral of refresh is

BEGIN

PROCESS(clk)
BEGIN

 IF (clk'event AND clk = '1') THEN
    IF(SelectorIN = flagIpos AND SelectorIN = flagC) THEN
        IF(flagIlado = '0') THEN
            Segmentos <= "10001111";  -- ":-"
        ELSE
            Segmentos <= "11111111"; --GAMEOVER
        END IF;
    ELSIF (SelectorIN = flagDpos AND SelectorIN = flagC) THEN
        IF(flagIlado = '0') THEN
            Segmentos <= "10111001"; -- "-:"
        ELSE
            Segmentos <= "11111111"; --GAMEOVER
        END IF;
    ELSIF (SelectorIN = flagIpos AND SelectorIN /= flagC ) THEN
        IF (flagIlado = '1') THEN
            Segmentos <= "11111001";
        ELSE
            Segmentos <= "11001111";
        END IF;
    ELSIF (SelectorIN = flagDpos AND SelectorIN /= flagC ) THEN
                IF (flagDlado = '1') THEN
                    Segmentos <= "11111001";
                ELSE
                    Segmentos <= "11001111";
                END IF;
    ELSIF (SelectorIN = flagC) THEN
        Segmentos <= "10111111";
    ELSE
        Segmentos <= "11111111";
    END IF;
 END IF;    
END PROCESS;

PROCESS(clk,SelectorIN)
BEGIN            
    CASE selectorIN IS
        WHEN "000" => 
            SelectorOUT <= "11111110";
        WHEN "001" => 
            SelectorOUT <= "11111101";
        WHEN "010" => 
            SelectorOUT <= "11111011";
        WHEN "011" => 
            SelectorOUT <= "11110111";
        WHEN "100" => 
            SelectorOUT <= "11101111";
        WHEN "101" => 
            SelectorOUT <= "11011111";
        WHEN "110" => 
            SelectorOUT <= "10111111";
        WHEN "111" => 
            SelectorOUT <= "01111111";
        WHEN OTHERS =>
    END CASE;

END PROCESS;
END Behavioral;

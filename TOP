library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity top is
    Port ( 
           clk, rst: in STD_LOGIC;
           button : in STD_LOGIC;
           digsel : in STD_LOGIC_VECTOR (3 downto 0);
           digctrl : out STD_LOGIC_VECTOR (3 downto 0);
           segment : out STD_LOGIC_VECTOR (6 downto 0));
          
end top;

architecture Behavioral of top is

signal boton_sinc : std_logic;
signal boton_deb : std_logic;
signal code : std_logic_vector (3 downto 0);


COMPONENT decoder
    PORT(
        code : IN std_logic_vector(3 DOWNTO 0);
        led : OUT std_logic_vector(6 DOWNTO 0)
        );
END COMPONENT;

COMPONENT counter
    PORT(
        boton: IN STD_LOGIC;
        code: OUT STD_LOGIC_VECTOR (3 downto 0 );
        rst, clk: in std_logic

        );
END COMPONENT;

COMPONENT debouncer
    PORT(
               clk : in STD_LOGIC;
               rst : in STD_LOGIC;
               btn_in : in STD_LOGIC;
               btn_out : out STD_LOGIC);
    END COMPONENT;
    
COMPONENT sincronizador
    PORT(
                sync_in: IN STD_LOGIC;
                clk: IN STD_LOGIC;
                sync_out: OUT STD_LOGIC
        );
  END COMPONENT;

begin
    Inst_decoder: decoder PORT MAP (
        code => code,
        led => segment
        );
    
    Inst_counter: counter PORT MAP(
        boton => boton_deb,
        code => code,
        clk => clk,
        rst => rst
        );
        
    Inst_debouncer: debouncer PORT MAP(
         clk => clk,
         rst => rst,
         btn_in => boton_sinc,
         btn_out => boton_deb
         );
         
    Inst_sincronizador: sincronizador PORT MAP(
            sync_in => button,
            clk => clk,
            sync_out => boton_sinc
            );
        
 digctrl <= digsel;
end Behavioral;

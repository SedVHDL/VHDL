-- El proposito de este modulo es transformar la manera de manejar los flags de la carretera: pasar de utilizar dos señales para cada limite
-- a utilizar una unica señal para cada lado.

-- Numero máximo de posiciones:
--  15      14      13      12      11      10      9       8       7       6       5       4       3       2       1       0     (Posicion)
--  111 0   111 1   110 0   110 1   101 0   101 1   100 0   100 1   011 0   011 1   010 0   010 1   001 0   001 1   000 0   000 1 ([Posicion][lado])


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Carretera is
  PORT( 
        rst, clk: IN std_logic;
        FlagIzqPos, FlagDerPos: OUT std_logic_vector(2 downto 0); --Definimos 4 salidas, dos para las dos posiciones de las paredes y otras dos para, dentro de cada posición, el ladoi izquierdo o derecho de cada pared.
        FlagIzqLado, FlagDerLado: OUT std_logic 
  );
end Carretera;

architecture Behavioral of Carretera is

COMPONENT ClockDisplay is
generic (TIMER: INTEGER); --FRECUENCIA DE NUESTROS RELOJES INDIVIDUALES;
port (
    clk: in STD_LOGIC;
    Selector: out STD_LOGIC_VECTOR (2 DOWNTO 0) --La señal que va a cambiar segun el reloj dividido.
);
END COMPONENT;

--Lo nuevo:
SIGNAL Posicion: INTEGER RANGE 0 to 15;

BEGIN

PROCESS (clk)
BEGIN

      CASE SelectorD IS --case para mover automáticamente las paredes
          WHEN "000" =>
                FlagDerPos <= "000";
                FlagDerLado <= '1';
                FlagIzqPos <= "010";
                FlagIzqLado <= '0';
          WHEN "001" =>
                FlagDerPos <= "000";
                FlagDerLado <= '0';
                FlagIzqPos <= "011";
                FlagIzqLado <= '1';
          WHEN "010" =>
                FlagDerPos <= "001";
                FlagDerLado <= '1';
                FlagIzqPos <= "011";
                FlagIzqLado <= '0';
          WHEN "011" =>
                FlagDerPos <= "001";
                FlagDerLado <= '0';
                FlagIzqPos <= "100";
                FlagIzqLado <= '1';
          WHEN "100" =>
                FlagDerPos <= "010";
                FlagDerLado <= '1';
                FlagIzqPos <= "100";
                FlagIzqLado <= '0';
          WHEN "101" =>
                FlagDerPos <= "010";
                FlagDerLado <= '0';
                FlagIzqPos <= "101";
                FlagIzqLado <= '1';
          WHEN "110" =>
                FlagDerPos <= "011";
                FlagDerLado <= '1';
                FlagIzqPos <= "101";
                FlagIzqLado <= '0';
          WHEN "111" =>
                FlagDerPos <= "011";
                FlagDerLado <= '0';
                FlagIzqPos <= "110";
                FlagIzqLado <= '1';
          WHEN others =>
END CASE;
END IF;
END PROCESS;
END ARCHITECTURE;

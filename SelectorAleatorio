LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
--Este c칩digo generar치 un bit pseudo-aleatorio el cual dir치 si las paredes se mueven a la derecha o izquierda, en la entidad Carretera
ENTITY SelectorAleatorio is
    GENERIC (WIDTH: INTEGER := 4);
    PORT (
        clk     : IN STD_LOGIC;
        rst: IN STD_LOGIC;
        EstadoIn: IN STD_LOGIC_VECTOR (2 DOWNTO 0);
        PosicionD: OUT INTEGER;
        PosicionI: OUT INTEGER
        );
END SelectorAleatorio;

ARCHITECTURE behav OF SelectorAleatorio is

COMPONENT GPClock is
generic (TIMER, WIDTH: INTEGER); --FRECUENCIA DE NUESTROS RELOJES INDIVIDUALES
port (
    clk: in STD_LOGIC;
    rst: in STD_LOGIC;
    Selector: out STD_LOGIC_VECTOR (WIDTH-1 DOWNTO 0) --La se침al que va a cambiar segun el reloj dividido.
);
end COMPONENT;

SIGNAL Clk2seg: STD_LOGIC_VECTOR (3 DOWNTO 0);
SIGNAL Maestro: STD_LOGIC;
--
BEGIN 

inst_GPClock_Carretera1: GPClock -- Divisor de frecuencia para el LVL 1
     GENERIC MAP (TIMER => 50000000, WIDTH => 4)
     PORT MAP(Selector => Clk2seg, clk => clk, rst => rst);

Maestro <= Clk2seg (WIDTH - 1) XOR Clk2seg (WIDTH - 2) XOR Clk2seg (WIDTH - 3) XOR Clk2seg (WIDTH - 4);

PROCESS (Clk2seg, rst)

VARIABLE PosicionD_Aux: INTEGER RANGE 0 TO 10 := 0;
VARIABLE PosicionI_Aux: INTEGER RANGE 5 TO 15 := 5;

BEGIN
    IF (rst = '0') THEN
        PosicionD_aux := 0;
        PosicionI_aux := 5;
    ELSE
        IF (EstadoIn = "010") THEN
            IF (Maestro = '1') THEN
                PosicionD_aux := PosicionD_aux + 1;
                PosicionI_aux := PosicionI_aux + 1;
            END IF;
            IF (Maestro = '0') THEN
                PosicionD_aux := PosicionD_aux - 1;
                PosicionI_aux := PosicionI_aux - 1;
            END IF;
         
             IF (PosicionD_aux < 0) THEN
                PosicionD_aux := 0;
                PosicionI_aux := 5;
             END IF;   
             PosicionD <= PosicionD_aux;
             PosicionI <= PosicionI_aux;
         END IF;
      END IF;
END PROCESS;


END behav;
